06 02 80 03 00 a0 00 10 16 0a 02 80 ce 00 b0 65 00 09 00 08 00 08 00 09 00 09 00 09 00 0a 00 0c 00 0d 00 0e 00 15 00 13 00 0e 00 0d 00 0c 00 0d 00 0d 00 0d 00 0e 00 0d 00 0e 00 0f 00 ff 1f ff 1f ff 1f ff 1f ff 1f ff 1f ff 1f ff 1f ff 1f ff 1f ff 1f 5b 00 59 00 7e 00 66 00 53 00 51 00 51 00 ff 1f ff 1f 5d 00 ff 1f ff 1f ff 1f ff 1f 51 00 53 00 56 00 56 00 56 00 56 00 56 00 57 00 5a 00 57 00 57 00 55 00 55 00 57 00 58 00 59 00 5d 00 5d 00 5d 00 5d 00 5b 00 56 00 87 00 90 00 90 00 92 00 8a 00 88 00 8f 00 93 00 8f 00 8c 00 99 00 9a 00 9c 00 9d 00 9e 00 a0 00 a2 00 a4 00 a6 00 a8 00 a9 00 ac 00 ae 00 b0 00 b3 00 b4 00 b1 00 b2 00 b2 00 c6 00 c4 00 c1 00 10 b2 ce 02 80 ce 00 b0 65 00 09 00 08 00 08 00 09 00 09 00 09 00 0a 00 0b 00 0b 00 0e 00 16 00 13 00 0f 00 0e 00 0c 00 0d 00 0d 00 0d 00 0d 00 0d 00 0e 00 10 00 ff 1f ff 1f ff 1f ff 1f ff 1f ff 1f ff 1f ff 1f ff 1f ff 1f ff 1f 59 00 58 00 7e 00 ff 1f 54 00 51 00 52 00 ff 1f ff 1f 62 00 ff 1f ff 1f ff 1f ff 1f 52 00 53 00 56 00 56 00 57 00 55 00 56 00 58 00 5b 00 56 00 57 00 54 00 55 00 57 00 58 00 5a 00 5d 00 5d 00 5e 00 5b 00 5b 00 57 00 88 00 90 00 90 00 92 00 8a 00 89 00 8f 00 92 00 90 00 8c 00 99 00 9b 00 9c 00 9d 00 9e 00 a0 00 a2 00 a4 00 a6 00 a7 00 a9 00 ab 00 ae 00 b0 00 b3 00 b3 00 b1 00 b2 00 b3 00 c5 00 c4 00 c1 00 10 2a 27 02 80 ce 00 b0 65 00 09 00 09 00 08 00 08 00 09 00 0a 00 0b 00 0b 00 0c 00 0d 00 14 00 13 00 0f 00 0e 00 0c 00 0d 00 0c 00 0d 00 0d 00 0e 00 0f 00 11 00 ff 1f ff 1f ff 1f ff 1f ff 1f ff 1f ff 1f ff 1f ff 1f ff 1f ff 1f 59 00 59 00 7e 00 ff 1f 52 00 50 00 52 00 ff 1f ff 1f 5e 00 ff 1f ff 1f ff 1f ff 1f 51 00 53 00 55 00 56 00 56 00 57 00 57 00 57 00 5b 00 57 00 58 00 55 00 55 00 57 00 58 00 5a 00 5c 00 5d 00 5d 00 5d 00 5b 00 56 00 87 00 90 00 90 00 92 00 8a 00 88 00 8e 00 92 00 8f 00 8c 00 99 00 9b 00 9c 00 9d 00 9f 00 a0 00 a2 00 a4 00 a6 00 a7 00 a9 00 ab 00 ae 00 b0 00 b2 00 b4 00 b1 00 b1 00 b3 00 c5 00 c4 00 c1 00 10 ab 35 02 80 ce 00 b0 65 00 09 00 09 00 08 00 08 00 0a 00 09 00 0a 00 0c 00 0c 00 0d 00 12 00 13 00 
0e 00 0d 00 0d 00 0d 00 0d 00 0d 00 0d 00 0d 00 
0f 00 10 00 ff 1f ff 1f ff 1f ff 1f ff 1f ff 
1f ff 1f ff 1f ff 1f ff 1f ff 1f 59 00 59 00 80 
00 ff 1f 54 00 51 00 52 00 ff 1f ff 1f 5f 00 
ff 1f ff 1f ff 1f ff 1f 51 00 53 00 56 00 56 
00 56 00 56 00 56 00 57 00 5a 00 57 00 57 00 55 
00 55 00 57 00 58 00 5a 00 5d 00 5d 00 5d 00 
5d 00 5a 00 56 00 88 00 90 00 91 00 92 00 8a 00 
88 00 8e 00 93 00 90 00 8c 00 99 00 9b 00 


/*
	for(int i  = 0 ; i < iSize; i++)
	{
		GetDataCN++;
		(m_ComuPort.m_QueueRead).GetByte(&aByte);  //글자 하나씩 읽어옴		
		str.Format("%02x", aByte);

		if(str == FindString[Process])					
			Process++;
		else
			Process=0;

		result += (str+" ");
		if(Process==3)
		{
			::AfxMessageBox("a");
			oneResult="06 02 80 "+result;
			::PostMessage(hCommWnd, WM_COMM_READ, 0, 0 );//인터페이스 담당하는 Dlg에 메시지를 보냄			
			result="";
			Process=0;
		}
	}
	*/


//	if(mode)
//	{
//		oneResult="06 02 80"+result;		
//		::PostMessage(hCommWnd, WM_COMM_READ, 0, 0 );//인터페이스 담당하는 Dlg에 메시지를 보냄			
//		mode=0;
//	}
	
//	CString a;
//	a.Format("%d",iSize);
//	::AfxMessageBox(a);

//	if( (GetDataN==0) || (GetDataCN == GetDataN) )
//	{
//		oneResult = result;
//		::PostMessage(hCommWnd, WM_COMM_READ, 0, 0 );//인터페이스 담당하는 Dlg에 메시지를 보냄	
//		result="";
//		GetDataCN=0;
//	}
	
//	int f=result.Find("06 02 80",2);
//	if(f!=-1)
//	{
//		oneResult = result.Mid(0,f);
//		result= result.Mid(f,result.GetLength()-f);
//		::PostMessage(hCommWnd, WM_COMM_READ, 0, 0 );//인터페이스 담당하는 Dlg에 메시지를 보냄	
//		::AfxMessageBox(oneResult);
//		::AfxMessageBox(result);
//	}

	
	
//	oneResult=result;